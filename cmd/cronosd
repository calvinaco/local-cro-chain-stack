#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

echoerr() {
    echo "$@" 1>&2;
    echo 1>&2;
    helpFunction 1>&2;
    exit 1;
}

helpFunction() {
    cat << EOF
Usage: $0 [tx|query|easy-tx|*] (arguments)

Command:
    tx:         Transaction commands that pre-fills connection to the node.
    query:      Query commands that pre-fills connection to the node.
    easy-tx:    Easy transaction command that pre-fills gas and keyring.
    *:          Any command to be run.

Flags:
    --help:     Show this help message
    --runtime:  The runtime identity to use. Default: "validator0". Make sure the flag is passed before the command.
EOF
    exit 1
}

SHARED=./assets/shared
CHAIN_ID=cronoslocal_65536-1
DOCKER_IMAGE=local-cro-chain/cronos
set +e
NETWORK_ID=$(docker network ls | grep 'local-cro-chain-network' | awk '{ print $1}')
set -e
if [[ -z ${NETWORK_ID+x} || "$NETWORK_ID" == "" ]]; then
    echoerr "docker network local-cro-chain-network not running."
fi

RUNTIME_IDENTITY=validator0
while [[ $# > 0 ]]; do
    case "$1" in
        --help)
            helpFunction
        ;;
        --runtime)
            RUNTIME_IDENTITY=$2
            shift 2
        ;;
        *)
            break
        ;;
    esac
done
RUNTIME=./runtime/cronos/$RUNTIME_IDENTITY

GAS_PRICES=$(cat $RUNTIME/home/config/app.toml | egrep -o "^minimum-gas-prices[[:space:]]?=[[:space:]]?\"([\.0-9]+basecro).*\"$" | egrep -o '[\.0-9]+basecro')

if [[ $# -eq 0 ]]; then
    set -x
    docker run -it --network=$NETWORK_ID \
        -v ${RUNTIME}:/app \
        -v ${SHARED}:/shared \
        $DOCKER_IMAGE
elif [[ "$1" == "easy-tx" ]]; then
    shift 1
    set -x
    docker run -it --network=$NETWORK_ID \
        -v ${RUNTIME}:/app \
        -v ${SHARED}:/shared \
        $DOCKER_IMAGE \
        tx \
        --chain-id=$CHAIN_ID \
        --gas-prices=$GAS_PRICES --gas=auto --gas-adjustment=1.5 \
        --keyring-backend=test \
        --node=http://cronos-$RUNTIME_IDENTITY:26657 \
        $@
elif [[ "$1" == "tx" ]]; then
    shift 1
    set -x
    docker run -it --network=$NETWORK_ID \
        -v ${RUNTIME}:/app \
        -v ${SHARED}:/shared \
        $DOCKER_IMAGE \
        tx \
        --chain-id=$CHAIN_ID \
        --node=http://cronos-$RUNTIME_IDENTITY:26657 \
        $@
elif [[ "$1" == "query" ]]; then
    shift 1
    set -x
    docker run -it --network=$NETWORK_ID \
        -v ${RUNTIME}:/app \
        -v ${SHARED}:/shared \
        $DOCKER_IMAGE \
        query \
        --node=http://cronos-$RUNTIME_IDENTITY:26657 \
        $@
else
    set -x
    docker run -it --network=$NETWORK_ID \
        -v ${RUNTIME}:/app \
        -v ${SHARED}:/shared \
        $DOCKER_IMAGE \
        $@
fi
